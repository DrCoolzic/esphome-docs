WK2132 I²C UART Expander
========================

.. seo::
    :description: Instructions for setting up WK2132 I²C Component in ESPHome.
    :image: wk2132.jpg

.. role:: raw-html-m2r(raw)
   :format: html

The WK2132 component allows you to use the 
`Weika WK2332-ISSG <https://www.lcsc.com/product-detail/Interface-Specialized_WEIKAI-WK2132-ISSG_C401039.html>`__
chip or the DFROBOT `Gravity: I²C to Dual UART Module <https://www.dfrobot.com/product-2001.html>`__
module directly in ESPHome. 

This WK2132 chip/module is an I²C to Dual UART with data transmission rate up to 1 Mbps. Each UART channel has independent 
256-byte FIFO hardware buffer for transmitting and receiving. The baud rate and check format of every 
UART channel can be set independently. Note that the data bit length is equal to 8 and cannot be changed.
The module provides 2 Mbps maximum communication rate. \ :raw-html-m2r:`<br>`
Documentation about the DFRobot module can be found at the 
`DFROBOT Wiki <https://wiki.dfrobot.com/Gravity%3A%20IIC%20to%20Dual%20UART%20Module%20SKU%3A%20DFR0627>`__

.. figure:: images/DFR0627.jpg
  :align: center

A maximum of four such modules can be connected to an I²C controller board, increasing the number of 
hardware serial ports to 8. The base addresses of these boards depend on the status of two switches 
on the board: A0 and A1. \ :raw-html-m2r:`<br>`
Once configured, you can use the UART channels to connect your UART Devices. 
Each channel acts, for the connected component, as a virtual UART Bus. 

.. list-table::
  :header-rows: 1
  :width: 300px
  :align: center

  * - I²C address
    - A1
    - A0
  * - 0x10
    - 0
    - 0
  * - 0x30
    - 0
    - 1
  * - 0x50
    - 1
    - 0
  * - 0x70
    - 1
    - 1

.. important:: 

    The above addresses are referred to as the component's base address. But in reality the component
    uses 8 consecutive addresses starting from the base address. For example if the component base address 
    is 0x10, it will occupy the addresses from 0x10 to 0x17 on the I²C bus. \ :raw-html-m2r:`<br>`
    This is important to know if you want to connect other devices on the same I²C bus.

.. code-block:: yaml

    # Example configuration entry
    uart:
      id: dummy
      tx_pin: 3
      baud_rate: 9600
    i2c:
      sda: 21 # 5
      scl: 22 # 4
      id: i2c_bus

    wk2132:
      - address: 0x70
        id: bridge_0
        i2c_id: i2c_bus
        uart:
          - uart_id: uart_0
            channel: 0
            baud_rate: 9600
            parity: even
          - uart_id: uart_1
            channel: 1
            baud_rate: 19200

    # Device using one of the wk2132 Uart channel
    sensor: 
      - platform: sds011
        pm_2_5:
          name: test_2_5µm_concentration
          id: test_2_5um_concentration
        pm_10_0:
          name: test_10_0µm_concentration
          id: test_10_0um_concentration
        update_interval: 1min
        uart_id: uart_0

.. caution:: 

    Currently, due to some internal limitation, it is necessary to declare a ``uart:`` component in
    your configuration **even if you do not need one**. See the example above. This requirement 
    might disappear in the future.

Performance considerations:
***************************

Todo---

Component configuration variables:
**********************************

- **id** (**Required**, :ref:`config-id`): The id to use for this WK2312 component.
- **address** (*Optional*): The I²C address of this component. Defaults to ``0x10``.
- **i2c_id** (*Optional*): The I²C Bus ID. Defaults to the default i²c bus.
- **crystal** (*Optional*): The frequency in Hz of the crystal connected to the chip.
  If you are using DFROBOT modules, the frequency of the crystal  does not need to be specified. 
  it will be set automatically to 14745600 Hz.
- **uart** (*Required*): The UART channels.

  - **uart_id** (**Required**, :ref:`config-id`): The id to use for this UART channel.
  - **channel** (*Optional*): The channel number to use for this virtual UART. Default to ``0``.
    Obviously if you are using both channels they must use different channel number (i.e. ``0`` and ``1``)
  - **baud_rate** (**Required**): The baud rate of the UART channel.
  - **parity** (*Optional*): The parity used on the UART channel. Options: ``NONE``, ``EVEN``, ``ODD``. Defaults to ``NONE``.
  - **stop_bits** (*Optional*): The number of stop bits to send. Options: ``1``, ``2``. Defaults to ``1``.

.. note::

    For the wk2132 the number of data bits used on the UART channel is set to 8 and cannot be changed

See Also
********

- :ref:`i2c`
- :ghedit:`Edit`
